name: Backend CI/CD

on:
  push:
    branches:
      - 'main'

env:
  API_KEY: ${{ secrets.API_KEY }}
  ECR_REPOSITORY: 677276084427.signin.aws.amazon.com           # set this to your Amazon ECR repository name
  ECS_SERVICE: read-ease                 # set this to your Amazon ECS service name
  CONTAINER_NAME: lastest           # set this to the name of the container in the

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        cd backend
        pip3 install --upgrade pip
        pip3 install -q -U google-generativeai
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        cd backend        
        python services/api_test.py
    
  deploy:
    runs-on: ubuntu-latest
    # needs: run-tests

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # enable docker - container driver
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          buildkitd-flags: --allow-insecure-entitlement network.host


      # Step 2: Set up AWS credentials and region
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # Specify region here

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # emulate target arch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
    

      # Build and push Docker image to Amazon ECR
      - name: Build and push Docker image
        run: |
          # cd into the directory with the Dockerfile
          cd backend 

          # Set image tag and ECR repository name
          IMAGE_TAG=read-ease
          REPOSITORY_URI=public.ecr.aws/y7l0x2i0/read-ease-repo

          REDIS_IMAGE=redis
          REDIS_REPOSITORY=public.ecr.aws/y7l0x2i0/redis-repo

          # Build the Docker image          
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $REPOSITORY_URI:$IMAGE_TAG \
            --push . 

          # Build the Redis image
          docker buildx build --platform linux/amd64,linux/arm64 -t $REDIS_REPOSITORY:$REDIS_IMAGE -f "Dockerfile redis" --push .      

      # Deploy to Lightsail
      - name: Deploy to Lightsail
        run: |
          # cd into the directory with the Dockerfile
          cd backend 

          # Define deployment file and container name          
          SERVICE_NAME=read-ease

          # Create Lightsail container service deployment
          aws lightsail create-container-service-deployment \
            --service-name $SERVICE_NAME \
            --containers file://containers.json \
            --public-endpoint file://public-endpoint.json